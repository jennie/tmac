extends(src='layout.sgr')

  block(name='meta')

  block(name="nav")

  block(name='content')

    main.slider.event-grid
      each(loop='exhibition in dato.program')
        if(condition='exhibition.past !== true')
            .event.exhibition(style="background-image: url('//{{ dato._meta.imgixHost + exhibition.featureImage.path }}?bm=normal&balph=70&blend={{ exhibition.canceled == true ? 'eeeeee' : '159159'}}'); background-size: cover;" data-startDate="{{ Date.parse(exhibition.startDate) }}"  class="{{ exhibition.canceled == true ? 'canceled' : ''}}")

              a(href="/program/{{ exhibition.slug }}")
                .desc
                  if(condition="exhibition.member[0] && exhibition.presenter")
                    small {{ exhibition.member[0].name }} & {{ exhibition.presenter }}
                  elseif(condition="exhibition.member[0]")
                    small {{ exhibition.member[0].name }}
                  elseif(condition="exhibition.presenter")
                    small {{ exhibition.presenter }}
                  h3 {{ exhibition.title }}
                  if(condition="exhibition.location[0]")

                    p.location
                      each(loop='space in exhibition.location')
                        span.space(style="background-color: #fff; color: #000; padding: 2px 4px;") {{ space.name }}



                  .when
                    p.date
                      span(class="fas fa-fw fa-calendar-alt")
                      // if the program starts and ends on same day
                      if(condition="dateFns.isSameDay(exhibition.startDate,exhibition.endDate) == true")
                        span.date {{ df(exhibition.startDate, "UTC:mmmm d", true)}} • {{ df(exhibition.startDate, "UTC:h:MM tt", true)}}
                      // if the program starts and ends in same month, don't show month name twice
                      if(condition="dateFns.isSameMonth(exhibition.startDate,exhibition.endDate) == true")
                        span.date {{ df(exhibition.startDate, "UTC:mmmm d", true)}}–{{ df(exhibition.endDate, "UTC:d", true)}}
                      else
                        span.date {{ df(exhibition.startDate, "UTC:mmmm d", true)}}–{{ df(exhibition.endDate, "UTC:mmmm d", true)}}
                    if(condition="{{ exhibition.hours }}")
                      p.hours
                        span(class="fas fa-fw fa-clock")
                        span {{ exhibition.hours }}
                    if(condition="{{ exhibition.ticketPrice }}")
                      p.tickets
                        span(class="fas fa-fw fa-ticket-alt")
                        span {{ exhibition.ticketPrice }}


                .register
                  // span(class="btn btn-primary") Info
                  if(condition="dateFns.isWithinRange(new Date(), exhibition.startDate, exhibition.endOfDayEndDate) == true")

                    p.thisweek Current Exhibition
                  elseif(condition="dateFns.isFuture(exhibition.startDate) == true")
                    p.upcoming-exhibition Upcoming Exhibition
                    p: small Opens in {{ dateFns.distanceInWordsToNow(exhibition.startDate)}}


      each(loop='event in dato.event')
        if(condition='event.past !== true')
          .event.daily(style="background-image: url('//{{ dato._meta.imgixHost + event.featureImage.path }}?bm=normal&balph=70&blend={{ event.canceled == true ? 'eeeeee' : '322D5A'}}'); background-size: cover;" data-startDate="{{ Date.parse(event.startDateTime) }}"  class="{{ event.canceled == true ? 'canceled' : ''}}")

            a
              .desc
                if(condition="event.canceled == true")
                  span.canceled Canceled
                if(condition="event.member[0] && event.presenter")
                  small {{ event.member[0].name }} & {{ event.presenter }}
                elseif(condition="event.member[0]")
                  small {{ event.member[0].name }}
                elseif(condition="event.presenter")
                  small {{ event.presenter }}
                h3 {{ event.title }}
                if(condition="event.location[0]")
                  p.location {{ event.location[0].name }}


                .when
                  // if the event starts and ends on same day
                  if(condition="dateFns.isSameDay(event.startDateTime,event.endDateTime) == true")
                    p.date {{ df(event.startDateTime, "UTC:mmmm d", true)}}

                  // if the event spans multiple days, but starts and ends in same month,
                  // don't show month name twice
                  elseif(condition="dateFns.isSameMonth(event.startDateTime,event.endDateTime) == true")
                    p.date {{ df(event.startDateTime, "UTC:mmmm d", true)}}–{{ df(event.endDateTime, "UTC:d", true)}}
                  else
                    p.date {{ df(event.startDateTime, "UTC:mmmm d", true)}}–{{ df(event.endDateTime, "UTC:mmmm d", true)}}


              .register
                if(condition="dateFns.isToday(event.startDateTime) == true")
                  p.thisweek Today
                elseif(condition="dateFns.isThisWeek(event.startDateTime) == true")
                  p.thisweek This {{ dateFns.format(event.startDateTime, 'dddd') }}

  block(name='footer')

  block(name='javascript')

    script(src="https://cdnjs.cloudflare.com/ajax/libs/tiny-slider/2.8.7/min/tiny-slider.js")
    script(src="/js/vendor/tinysort.js")
    script.
      tinysort('.event-grid .exhibition',{data:'startdate', order:'asc'});
      tinysort('.event-grid .daily',{data:'startdate', order:'asc'});
      var slider = tns({
        items: 2,
        speed: 300,
        slideBy: 1,
        autoplay: false,
        axis: 'horizontal',
        // gutter: 20,

        controls: false,
        mode: 'carousel',
        nav: false,
        autoplayButtonOutput: false,
        // autoplayTimeout: 5000
      });
      slider.play();
